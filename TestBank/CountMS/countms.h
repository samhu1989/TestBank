#ifndef COUNTMS_H
#define COUNTMS_H
/*
description
Given an image containing only two kinds of capital letters, 'M' and 'S', can you tell how many of each letter are there in the image? Note that the letters may be of different sizes and may be rotated.

input
The first line contains two integers H and W, indicating the height and weight of the image.  (1 <= H, W <= 500)

Then follows an H x W matrix indicating the image.

'.' indicates the pixel is empty and '#' indicates the pixel is part of a letter.

It is guaranteed that:

1. The letters are actually in Microsoft Yahei font.

2. Each letter consists of at least 20 pixels.

3. Different letters are at least 2 pixels away from each other.

output
Two integers, the number of 'M' letters and the number of 'S' letters.
input example
50 50
..................................................
..................................................
..........................................#.......
............................###..........##.......
.......##..................##.##........#.........
.......##..................#...........##.........
......###.......#..........#...........##.........
......####.....###.........###..........######....
......#.##.....###..........####..............#...
......#.##....####............##..............#...
.....##..#...##.#..........#...#.............##...
.....##..#..##.##..........#####...........##.....
.....#...#.##..##.................................
.....#...###...#..................................
.....#...###...#..................................
.........##...##......................##..........
..............##.....##..............###..........
....................###............###............
...................###.............##.............
..................###.............##..............
.................###..............##..............
................###......###.......########.......
...............###.....#####........########......
..............###...########...............##.....
.............###..#####..##................##.....
............########....###................##.....
...........#######......##.....##.........###.....
............###.........##....###.......####......
.......................###...###.......###........
.......#...............##...###...................
.....####.............###..###....................
...######.............##..###.....................
..####................######......................
..###................######.......................
.###.................#####.......##...............
.###................#####........######...........
.###.................###.........##########.......
..##########.......................##...####......
..############......................##............
....###########......................###..........
.............##.......................###.........
.............###.......................###........
.............###...................#######........
.............##................########...........
............###................####...............
..........####..................######............
.......######......................######.........
.......###.............................##.........
..................................................
..................................................
*/
#include "countms_global.h"
#include <iostream>
#include <vector>
#define xy2i(x,y) ((y)*w_+(x))
class COUNTMSSHARED_EXPORT Solution
{
public:
    Solution();
    void count(const std::string&);
    void count(std::istream&,int& nm, int& ns);
protected:
    void flood();
    void fill(int x,int y,int l);
    void scan();
    void scanRow();
    void scanCol();
    void scanDiag();
    void scanBackDiag();
    int num(int l);
private:
    int* img_;
    int w_;
    int h_;
    int sum_;
    std::vector<int> count_;
    std::vector<int> max_count_;
    int nm_;
    bool in_letter_;
    int current_letter_;
};

#endif // COUNTMS_H
